# CSC module load commands
# ompi/2.0.1/gnu/4.9.2 

# where are the libraries for the Linux platform located
# note that the platform will be added to this path!
PLATFORM=INT64NGNU

# -------------------------------
# C-preprocessor used for FORTRAN source codes
CPP=gfortran
# preprocessor options
CPPFLAGS=-E

# -------------------------------
# which C-compiler do we use
CC=gcc
# C compiler options
CCFLAGS= -O -m64 -ffast-math -mcmodel=medium -fPIC
#CCFLAGS= -g



# -------------------------------
# switch for names alias of fortran routines
# -D__UNDERSCORE__   use this, if a fortran routine say "daxpy" has to be 
#                    called from C using the name "daxpy_"
# -D__CAPS__         use this, if a fortran routine say "daxpy" has to be
#                    called from C using the name "DAXPY"
# -D__2UNDERSCORES__ use this, if a fortran routine say "daxpy" has to be 
#                    called from C using the name "daxpy__"
# You can combine __CAPS__ with either __UNDERSCORE__ or __2UNDERSCORES__
# to obtain names like "DAXPY_" or "DAXPY__"
# SOLARIS OS:      -D__UNDERSCORE__
# Red Hat Linux:   -D__UNDERSCORE__
# AIX:             none
FORTRANNAMES=-D__UNDERSCORE__


# decide whether integer should be 32 bit or 64 bit
#LONGINTEGER=-D_LONG_INTEGER_
LONGINTEGER=


# -------------------------------
# which PLATFORM dependent libraries to link
LIBS= -lopenblas -lfftw3


# -------------------------------
# which fortran compiler is used
F90=mpif90
# its flags
F90FLAGS= -O2 -m64 -DF90 -fexternal-blas \
	  -ffree-line-length-none -fbounds-check \
	  -fno-range-check -fimplicit-none
#F90FLAGS= -pg -fprofile-arcs -O2 -m64 -DF90 -fexternal-blas \
#	  -ffree-line-length-none -fbounds-check \
#	  -fno-range-check -fimplicit-none
#F90LAGS=  -g


# -------------------------------
# which fortran compiler is used
FF=gfortran
# its flags
FFFLAGS=  -O -fbounds-check -fno-range-check -m64 
#FFFLAGS=  -g


# -------------------------------
# Preprocessor + FORTRAN Compiler
FCOMPILE=$(FF)  $(FFFLAGS)  -I$(INCDIR) $(ARITHMETIC) $(LONGINTEGER) -c -o $@ $<

#FCOMPILE=rm -rf $*.f;\
#         $(CPP) $(CPPFLAGS) -I$(INCDIR) $(ARITHMETIC) $<  >$*.f;\
#         $(FF)  $(FFFLAGS)  -I$(INCDIR) -c -o $@ $*.f;\
#	 rm -rf $*.f


# -------------------------------
# which linker do we use
LD=$(F90)
# its flags
LDFLAGS=-O -m64  -mcmodel=medium -fPIC -L$(STARTDIR)/../lib 



# -------------------------------
# how do we create a library
AR=ar
# its flags
ARFLAGS=ru



# -------------------------------
# how to update the library
RL=ranlib
# its flags
RLFLAGS=

# Linux
#LIBS=-ljadamilu  -llapack -lblas -lm -lc 


# -------------------------------
# miscelaneous abbreviations
CAT=cat
RM=rm
MV=mv
CP=cp
CPLN=cp
